---
const {
  color,
  title,
  subtitle,
  id,
  cards,
  CarId,
  showFooterContent,
  showCarousel,
  titleCard1,
  boldCard1,
  detailCard1,
  displayCard1,
  titleCard2,
  boldCard2,
  detailCard2,
  displayCard2,
  titleCard3,
  boldCard3,
  detailCard3,
  displayCard3,
} = Astro.props;
const textColor = `text-${color}`;
import CarouselContainer from "./CarouselContainer.astro";
import FooterMenu from "./FooterMenu.astro";
---

<section
  class="landing-section bg-black h-screen w-auto text-center overflow-hidden relative"
  data-header-color={color}
  id={id}
>
  <div class="z-30 relative h-full pt-14 md:pt-3 xl:pt-20 flex flex-col">
    <!-- Hero -->
    <header
      class="w-auto px-3 py-1 mx-auto rounded-lg bg-slate-800/50 mb-0 mt-2"
    >
      <h2 class={`${textColor} pt-0 text-2xl md:text-2xl`}>
        {title}
      </h2>
      <p class={`${textColor} text-sm`}>
        {subtitle}
      </p>
    </header>

    <div class="z-10">
      <slot name="before" />
    </div>
    <!-- Aqui -->
    <!-- class="relative w-full max-w-screen-lg mx-auto my-auto h-[60vh] sm:h-[60vh] md:h-[70vh] lg:h-[80vh] overflow-hidden" -->
    <div class="overflow-hidden mx-auto w-12/12  md:w-8/12">
      <slot name="carousel" />
      {showCarousel && <CarouselContainer cards={cards} CarId={CarId} />}
    </div>

    <footer class="flex flex-col flex-grow justify-end z-30">
      <section
        class={`${textColor} w-full mx-auto 
        flex flex-col 
        mb-12 absolute bottom-28`}
      >
        <!-- Card 1 -->
        <div
          class={`${displayCard1} mx-auto w-full md:w-2/12 bg-slate-700/80 rounded-lg accordion group relative border border-slate-900 `}
        >
          <button
            class="accordion__button flex w-full flex-1 items-center justify-between gap-2 p-2 text-left font-medium transition hover:text-slate-900 hover:bg-slate-200 rounded-lg sm:px-4"
            type="button"
            id={`${titleCard1} accordion menu button`}
            aria-expanded="false"
            aria-controls={`${titleCard1} accordion menu content`}
          >
            {titleCard1}

            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="1em"
              height="1em"
              viewBox="0 0 16 16"
              class="accordionChevron h-7 w-7 shrink-0 transition-transform"
              ><path
                fill="currentColor"
                fill-rule="evenodd"
                d="m8.024 5.928l-4.357 4.357l-.62-.618L7.716 5h.618L13 9.667l-.619.618z"
                clip-rule="evenodd"></path></svg
            >
          </button>
          <div
            id={`${titleCard1} accordion menu content`}
            aria-labelledby={`${titleCard1} accordion menu button`}
            class="accordion__content hidden max-h-0 overflow-hidden px-3 transition-all duration-300 ease-in-out sm:px-4"
          >
            <p
              class={`prose mb-4 mt-1 max-w-full transition-[height] ${textColor} text-[0.7rem] md:text-[0.8rem] mt-2 text-justify px-1 md:px-2`}
            >
              <strong>{boldCard1}</strong>
              {detailCard1}
            </p>
          </div>
        </div>

        <!-- Card 2 -->
        <div
          class={`${displayCard2} mx-auto w-full md:w-2/12 bg-slate-700/80 rounded-lg accordion group relative  border border-slate-900`}
        >
          <button
            class="accordion__button flex w-full flex-1 items-center justify-between gap-2 p-2 text-left font-medium transition hover:text-slate-900 hover:bg-slate-200 rounded-lg sm:px-4"
            type="button"
            id={`${titleCard2} accordion menu button`}
            aria-expanded="false"
            aria-controls={`${titleCard2} accordion menu content`}
          >
            {titleCard2}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="1em"
              height="1em"
              viewBox="0 0 16 16"
              class="accordionChevron h-7 w-7 shrink-0 transition-transform"
              ><path
                fill="currentColor"
                fill-rule="evenodd"
                d="m8.024 5.928l-4.357 4.357l-.62-.618L7.716 5h.618L13 9.667l-.619.618z"
                clip-rule="evenodd"></path></svg
            >
          </button>
          <div
            id={`${titleCard2} accordion menu content`}
            aria-labelledby={`${titleCard2} accordion menu button`}
            class="accordion__content hidden max-h-0 overflow-hidden px-3 transition-all duration-300 ease-in-out sm:px-4"
          >
            <p
              class={`prose mb-4 mt-1 max-w-full transition-[height] ${textColor} text-[0.7rem] md:text-[0.8rem] mt-2 text-justify px-1 md:px-2`}
            >
              <strong>{boldCard2}</strong>
              {detailCard2}
            </p>
          </div>
        </div>

        <!-- Card 3 -->
        <div
          class={`${displayCard3} mx-auto w-full md:w-2/12 bg-slate-700/80 rounded-lg accordion group relative  border border-slate-900`}
        >
          <button
            class="accordion__button flex w-full flex-1 items-center justify-between gap-2 p-2 text-left font-medium transition hover:text-slate-900 hover:bg-slate-200 rounded-lg sm:px-4"
            type="button"
            id={`${titleCard3} accordion menu button`}
            aria-expanded="false"
            aria-controls={`${titleCard3} accordion menu content`}
          >
            {titleCard3}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="1em"
              height="1em"
              viewBox="0 0 16 16"
              class="accordionChevron h-7 w-7 shrink-0 transition-transform"
              ><path
                fill="currentColor"
                fill-rule="evenodd"
                d="m8.024 5.928l-4.357 4.357l-.62-.618L7.716 5h.618L13 9.667l-.619.618z"
                clip-rule="evenodd"></path></svg
            >
          </button>
          <div
            id={`${titleCard3} accordion menu content`}
            aria-labelledby={`${titleCard3} accordion menu button`}
            class="accordion__content hidden max-h-0 overflow-hidden px-3 transition-all duration-300 ease-in-out sm:px-4"
          >
            <p
              class={`prose mb-4 mt-1 max-w-full transition-[height] ${textColor} text-[0.7rem] md:text-[0.8rem] mt-2 text-justify px-1 md:px-2`}
            >
              <strong>{boldCard3}</strong>
              {detailCard3}
            </p>
          </div>
        </div>
        <slot name="whatsapp" />

        <div class="z-10">
          <slot name="after" />
          <a
            href="https://api.whatsapp.com/send/?phone=56978892439&text=Hola%20busco%20informaciÃ³n%20respecto%20de%20casas%20modulares"
            class="font-medium fixed bottom-2 sm:bottom-2 md:bottom-24 right-4  sm:right-4  md:right-1/3"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="icon icon-tabler icon-tabler-brand-whatsapp h-12 w-12 transition-colors text-green-500 hover:text-slate-200 hover:bg-green-500 rounded-2xl"
              width="40"
              height="40"
              viewBox="0 0 24 24"
              stroke-width="2"
              stroke="currentColor"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path d="M3 21l1.65 -3.8a9 9 0 1 1 3.4 2.9l-5.05 .9"></path>
              <path
                d="M9 10a.5 .5 0 0 0 1 0v-1a.5 .5 0 0 0 -1 0v1a5 5 0 0 0 5 5h1a.5 .5 0 0 0 0 -1h-1a.5 .5 0 0 0 0 1"
              ></path>
            </svg>
          </a>
        </div>
      </section>

      <slot name="footer" />
      <!-- Conditionally load footer: -->
      {showFooterContent && <FooterMenu />}
    </footer>
  </div>

  <div class="absolute top-0 bottom-0 h-full w-full z-10">
    <slot name="background" />
  </div>
</section>

<style>
  @keyframes pulse {
    0%,
    100% {
      background-position-y: 0%;
    }
    50% {
      background-position-y: 80%;
    }
  }
</style>

<script>
  function accordionSetup() {
    const accordionMenus = document.querySelectorAll(".accordion");
    accordionMenus.forEach((accordionMenu) => {
      const accordionButton = accordionMenu.querySelector(
        ".accordion__button"
      ) as HTMLElement;
      const accordionChevronIcon = accordionMenu.querySelector(
        ".accordionChevron"
      ) as HTMLElement;
      const accordionContent = accordionMenu.querySelector(
        ".accordion__content"
      ) as HTMLElement;

      if (accordionButton && accordionContent) {
        accordionButton.addEventListener("click", (event) => {
          if (!accordionMenu.classList.contains("active")) {
            // if accordion is currently closed, open it
            accordionMenu.classList.add("active");
            accordionButton.setAttribute("aria-expanded", "true");

            // set max-height to the height of the accordion content
            // this makes it animate properly
            accordionContent.classList.remove("hidden");
            (accordionContent as HTMLElement).style.maxHeight =
              accordionContent.scrollHeight + "px";
            accordionChevronIcon.classList.add("rotate-180");
          } else {
            // accordion is currently open, so close it
            accordionMenu.classList.remove("active");
            accordionButton.setAttribute("aria-expanded", "false");

            // set max-height to 0 to animate properly
            (accordionContent as HTMLElement).style.maxHeight = "0px";
            accordionChevronIcon.classList.remove("rotate-180");
            // delay to allow close animation
            setTimeout(() => {
              accordionContent.classList.add("hidden");
            }, 300);
          }
          event.preventDefault();
          return false;
        });
      }
    });
  }

  // runs on initial page load
  accordionSetup();

  // runs on view transitions navigation
  document.addEventListener("astro:after-swap", accordionSetup);
</script>
